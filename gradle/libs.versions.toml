[versions]
accompanistPermissionsVersion = "0.23.1"
activityCompose = "1.9.3"
agp = "8.8.0"
coilCompose = "2.4.0"
composeBom = "2024.12.01"
constraintlayoutCompose = "1.1.0"
converterGson = "2.9.0"
core = "1.10.2"
coreKtx = "1.15.0"
coreSplashscreen = "1.0.1"
firebaseAuth = "23.1.0"
firebaseBom = "33.7.0"
firebaseFirestore = "25.1.1"
firebaseMessagingVersion = "24.1.0"
firebaseStorage = "21.0.1"
generativeaiVersion = "0.9.0"
googleServices = "4.4.2"
hiltAndroid = "2.50"
hiltNavigationCompose = "1.2.0"
kotlin = "2.0.0"
kotlinxCoroutinesPlayServices = "1.7.3"
ksp = "2.0.0-1.0.24"
lifecycleRuntimeKtx = "2.8.7"
loggingInterceptorVersion = "4.9.0"
mapsCompose = "4.3.3"
mapsComposeUtils = "4.3.3"
mapsComposeWidgets = "4.3.3"
material = "1.12.0"
materialIconsExtended = "1.7.6"
navigationSafeArgsGradlePlugin = "2.8.5"
playServicesAuth = "21.3.0"
playServicesLocation = "21.3.0"
playServicesMaps = "19.0.0"
retrofit = "2.9.0"
textflow = "1.1.2"
runtimeLivedataVersion = "1.7.6"
composeMaterialVersion = "1.4.0"

[libraries]
androidx-constraintlayout-compose = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "constraintlayoutCompose" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
androidx-core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "coreSplashscreen" }
androidx-hilt-navigation-compose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "hiltNavigationCompose" }
androidx-lifecycle-runtime-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycleRuntimeKtx" }
androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycleRuntimeKtx" }
androidx-material-icons-extended = { module = "androidx.compose.material:material-icons-extended", version.ref = "materialIconsExtended" }
androidx-navigation-safe-args-gradle-plugin = { module = "androidx.navigation:navigation-safe-args-gradle-plugin", version.ref = "navigationSafeArgsGradlePlugin" }
animations-core = { module = "io.github.raamcosta.compose-destinations:animations-core", version.ref = "core" }
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coilCompose" }
converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "converterGson" }
firebase-auth = { module = "com.google.firebase:firebase-auth", version.ref = "firebaseAuth" }
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBom" }
firebase-firestore = { module = "com.google.firebase:firebase-firestore", version.ref = "firebaseFirestore" }
firebase-messaging = { module = "com.google.firebase:firebase-messaging", version.ref = "firebaseMessagingVersion" }
firebase-storage = { module = "com.google.firebase:firebase-storage", version.ref = "firebaseStorage" }
generativeai = { module = "com.google.ai.client.generativeai:generativeai", version.ref = "generativeaiVersion" }
google-accompanist-permissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanistPermissionsVersion" }
google-services = { module = "com.google.gms:google-services", version.ref = "googleServices" }
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hiltAndroid" }
hilt-android-gradle-plugin = { module = "com.google.dagger:hilt-android-gradle-plugin", version.ref = "hiltAndroid" }
hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "hiltAndroid" }
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
androidx-ui = { group = "androidx.compose.ui", name = "ui" }
androidx-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
androidx-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
androidx-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
androidx-material3 = { group = "androidx.compose.material3", name = "material3" }
kotlinx-coroutines-play-services = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services", version.ref = "kotlinxCoroutinesPlayServices" }
composeDestinations-ksp = { module = "io.github.raamcosta.compose-destinations:ksp", version.ref = "core" }
logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "loggingInterceptorVersion" }
maps-compose = { module = "com.google.maps.android:maps-compose", version.ref = "mapsCompose" }
maps-compose-utils = { module = "com.google.maps.android:maps-compose-utils", version.ref = "mapsComposeUtils" }
maps-compose-widgets = { module = "com.google.maps.android:maps-compose-widgets", version.ref = "mapsComposeWidgets" }
material = { module = "com.google.android.material:material", version.ref = "material" }
play-services-auth = { module = "com.google.android.gms:play-services-auth", version.ref = "playServicesAuth" }
play-services-location = { module = "com.google.android.gms:play-services-location", version.ref = "playServicesLocation" }
play-services-maps = { module = "com.google.android.gms:play-services-maps", version.ref = "playServicesMaps" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
textflow = { module = "io.github.oleksandrbalan:textflow", version.ref = "textflow" }
androidx-runtime-livedata = { group = "androidx.compose.runtime", name = "runtime-livedata", version.ref = "runtimeLivedataVersion" }
androidx-compose-material = { group = "androidx.wear.compose", name = "compose-material", version.ref = "composeMaterialVersion" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
jetbrainsKotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
devToolsKsp = { id = "com.google.devtools.ksp", version.ref = "ksp" }